{"ast":null,"code":"var _jsxFileName = \"/Users/mattkam/Desktop/learnStuff/Udemy/master-react/streams/client/src/components/streams/StreamShow.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nclass StreamShow extends Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 10\n      }\n    }, this.props.stream.title);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.stream[this.props.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"sources":["/Users/mattkam/Desktop/learnStuff/Udemy/master-react/streams/client/src/components/streams/StreamShow.js"],"names":["React","Component","connect","fetchStream","StreamShow","componentDidMount","props","match","params","id","render","stream","title","mapStateToProps","state","ownProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,eAA1B;;AAGA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AACjCI,EAAAA,iBAAiB,GAAG;AACpB,SAAKC,KAAL,CAAWH,WAAX,CAAuB,KAAKG,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACC;;AAEFC,EAAAA,MAAM,GAAG;AACR,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKJ,KAAL,CAAWK,MAAX,CAAkBC,KAAxB,CAAP;AACA;;AAPiC;;AASnC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AACLJ,IAAAA,MAAM,EAAEG,KAAK,CAACH,MAAN,CAAa,KAAKL,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAArC;AADH,GAAP;AAGD,CAJD;;AAMA,eAAeP,OAAO,CAACW,eAAD,EAAkB;AAACV,EAAAA;AAAD,CAAlB,CAAP,CAAwCC,UAAxC,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {connect} from 'react-redux';\nimport {fetchStream} from '../../actions';\n\n\nclass StreamShow extends Component {\n  componentDidMount() {\n\t\tthis.props.fetchStream(this.props.match.params.id);\n  }\n  \n\trender() {\n\t\treturn <div>{this.props.stream.title}</div>;\n\t}\n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.stream[this.props.match.params.id]\n  }\n}\n\nexport default connect(mapStateToProps, {fetchStream})(StreamShow);\n"]},"metadata":{},"sourceType":"module"}